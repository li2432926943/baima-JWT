{
  "version": 3,
  "sources": ["../../quill-image-super-solution-module/index.js"],
  "sourcesContent": ["/**\n *@description 观察者模式 全局监听富文本编辑器\n */\nexport const QuillWatch = {\n    watcher: {}, // 登记编辑器信息\n    active: null, // 当前触发的编辑器\n    on: function(imageExtendId, ImageExtend) {\n        // 登记注册使用了ImageEXtend的编辑器\n        if (!this.watcher[imageExtendId]) {\n            this.watcher[imageExtendId] = ImageExtend;\n        }\n    },\n    emit: function(activeId, type = 1) {\n        // 事件发射触发\n        this.active = this.watcher[activeId];\n        if (type === 1) {\n            imgHandler();\n        }\n    },\n};\n\n/**\n * @description 图片功能拓展： 增加上传 拖动 复制\n */\nexport class ImageExtend {\n    /**\n     * @param quill {Quill}富文本实例\n     * @param config {Object} options\n     * config  keys: action, headers, editForm start end error  size response\n     */\n    constructor(quill, config = {}) {\n        this.id = Math.random();\n        this.quill = quill;\n        this.quill.id = this.id;\n        this.config = config;\n        this.file = \"\"; // 要上传的图片\n        this.imgURL = \"\"; // 图片地址\n        quill.root.addEventListener(\"paste\", this.pasteHandle.bind(this), false);\n        quill.root.addEventListener(\"drop\", this.dropHandle.bind(this), false);\n        quill.root.addEventListener(\n            \"dropover\",\n            function(e) {\n                e.preventDefault();\n            },\n            false\n        );\n        this.cursorIndex = 0;\n        QuillWatch.on(this.id, this);\n    }\n\n    /**\n     * @description 检验图片大小是否超出限制\n     */\n    checkPicSize() {\n        let self = this;\n        if (self.config.size && self.file.size >= self.config.size * 1024 * 1024) {\n            if (self.config.sizeError) {\n                self.config.sizeError();\n            }\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * @description 粘贴\n     * @param e\n     */\n    pasteHandle(e) {\n        e.preventDefault();\n        QuillWatch.emit(this.quill.id, 0);\n        let clipboardData = e.clipboardData;\n        let i = 0;\n        let items, item, types;\n\n        if (clipboardData) {\n            items = clipboardData.items;\n\n            if (!items) {\n                return;\n            }\n            item = items[0];\n            types = clipboardData.types || [];\n\n            for (; i < types.length; i++) {\n                if (types[i] === \"Files\") {\n                    item = items[i];\n                    break;\n                }\n            }\n            if (item && item.kind === \"file\" && item.type.match(/^image\\//i)) {\n                this.file = item.getAsFile();\n                let self = this;\n                // 如果图片限制大小\n                if (!this.checkPicSize()) {\n                    return;\n                }\n                if (this.config.action) {\n                    this.uploadImg();\n                } else {\n                    this.toBase64();\n                }\n            }\n            if (item && item.kind === \"string\" && [\"text/plain\", \"text/html\"].indexOf(item.types)) {\n                //将粘贴的文本内容插入到编辑器中\n                item.getAsString(function(s) {\n                    const self = QuillWatch.active;\n                    let length = self.quill.getSelection(true).index;\n                    self.cursorIndex = length;\n                    self.quill.insertText(QuillWatch.active.cursorIndex, s.replace(/\\s{2,}/g, \"\\n\"));\n                    self.quill.update();\n                    setTimeout(() => self.quill.setSelection(self.cursorIndex + s.length, 0), 0);\n                });\n            }\n        }\n    }\n\n    /**\n     * 拖拽\n     * @param e\n     */\n    dropHandle(e) {\n        QuillWatch.emit(this.quill.id, 0);\n        const self = this;\n        e.preventDefault();\n        // 如果图片限制大小\n        if (!self.checkPicSize()) {\n            return;\n        }\n        self.file = e.dataTransfer.files[0]; // 获取到第一个上传的文件对象\n        if (this.config.action) {\n            self.uploadImg();\n        } else {\n            self.toBase64();\n        }\n    }\n\n    /**\n     * @description 将图片转为base4\n     */\n    toBase64() {\n        const self = this;\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            // 返回base64\n            self.imgURL = e.target.result;\n            self.insertImg();\n        };\n        reader.readAsDataURL(self.file);\n    }\n\n    /**\n     * @description 上传图片到服务器\n     */\n    uploadImg() {\n        const self = this;\n        let quillLoading = self.quillLoading;\n        let config = self.config;\n        // 构造表单\n        let formData = new FormData();\n        formData.append(config.name, self.file);\n        // 自定义修改表单\n        if (config.editForm) {\n            config.editForm(formData);\n        }\n        // 创建ajax请求\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"post\", config.action, true);\n        // 如果有设置请求头\n        if (config.headers) {\n            config.headers(xhr);\n        }\n        if (config.change) {\n            config.change(xhr, formData);\n        }\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    //success\n                    let res = JSON.parse(xhr.responseText);\n                    self.imgURL = config.response(res);\n                    QuillWatch.active.uploadSuccess();\n                    self.insertImg();\n                    if (self.config.success) {\n                        self.config.success();\n                    }\n                } else {\n                    //error\n                    if (self.config.error) {\n                        self.config.error();\n                    }\n                    QuillWatch.active.uploadError();\n                }\n            }\n        };\n        // 开始上传数据\n        xhr.upload.onloadstart = function(e) {\n            QuillWatch.active.uploading();\n            // let length = (self.quill.getSelection() || {}).index || self.quill.getLength()\n            // self.quill.insertText(length, '[uploading...]', { 'color': 'red'}, true)\n            if (config.start) {\n                config.start();\n            }\n        };\n        // 上传过程\n        xhr.upload.onprogress = function(e) {\n            let complete = (((e.loaded / e.total) * 100) | 0) + \"%\";\n            QuillWatch.active.progress(complete);\n        };\n        // 当发生网络异常的时候会触发，如果上传数据的过程还未结束\n        xhr.upload.onerror = function(e) {\n            QuillWatch.active.uploadError();\n            if (config.error) {\n                config.error();\n            }\n        };\n        // 上传数据完成（成功或者失败）时会触发\n        xhr.upload.onloadend = function(e) {\n            if (config.end) {\n                config.end();\n            }\n        };\n        xhr.send(formData);\n    }\n\n    /**\n     * @description 往富文本编辑器插入图片\n     */\n    insertImg() {\n        const self = QuillWatch.active;\n        self.quill.insertEmbed(QuillWatch.active.cursorIndex, \"image\", self.imgURL);\n        self.quill.update();\n        self.quill.setSelection(self.cursorIndex + 1);\n    }\n\n    /**\n     * @description 显示上传的进度\n     */\n    progress(pro) {\n        pro = \"[\" + \"uploading\" + pro + \"]\";\n        QuillWatch.active.quill.root.innerHTML = QuillWatch.active.quill.root.innerHTML.replace(\n            /\\[uploading.*?\\]/,\n            pro\n        );\n    }\n\n    /**\n     * 开始上传\n     */\n    uploading() {\n        let length = QuillWatch.active.quill.getSelection(true).index;\n        QuillWatch.active.cursorIndex = length;\n        QuillWatch.active.quill.insertText(QuillWatch.active.cursorIndex, \"[uploading...]\", { color: \"red\" }, true);\n    }\n\n    /**\n     * 上传失败\n     */\n    uploadError() {\n        QuillWatch.active.quill.root.innerHTML = QuillWatch.active.quill.root.innerHTML.replace(\n            /\\[uploading.*?\\]/,\n            \"[upload error]\"\n        );\n    }\n\n    uploadSuccess() {\n        QuillWatch.active.quill.root.innerHTML = QuillWatch.active.quill.root.innerHTML.replace(/\\[uploading.*?\\]/, \"\");\n    }\n}\n\n/**\n * @description 点击图片上传\n */\nexport function imgHandler() {\n    let fileInput = document.querySelector(\".quill-image-input\");\n    if (fileInput === null) {\n        fileInput = document.createElement(\"input\");\n        fileInput.setAttribute(\"type\", \"file\");\n        fileInput.classList.add(\"quill-image-input\");\n        fileInput.style.display = \"none\";\n        // 监听选择文件\n        fileInput.addEventListener(\"change\", function() {\n            let self = QuillWatch.active;\n            self.file = fileInput.files[0];\n            fileInput.value = \"\";\n            // 可设置上传图片的格式\n            fileInput.setAttribute(\"accept\", self.config.accept);\n            // 如果图片限制大小\n            if (!self.checkPicSize()) {\n                return;\n            }\n            if (self.config.action) {\n                self.uploadImg();\n            } else {\n                self.toBase64();\n            }\n        });\n        document.body.appendChild(fileInput);\n    }\n    fileInput.click();\n}\n\n/**\n *@description 全部工具栏\n */\nexport const container = [\n    [\"bold\", \"italic\", \"underline\", \"strike\"],\n    [\"blockquote\", \"code-block\"],\n    [{ header: 1 }, { header: 2 }],\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [{ script: \"sub\" }, { script: \"super\" }],\n    [{ indent: \"-1\" }, { indent: \"+1\" }],\n    [{ direction: \"rtl\" }],\n    [{ size: [\"small\", false, \"large\", \"huge\"] }],\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n    [{ color: [] }, { background: [] }],\n    [{ font: [] }],\n    [{ align: [] }],\n    [\"clean\"],\n    [\"link\", \"image\", \"video\"],\n];\n"],
  "mappings": "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",
  "names": ["ImageExtend"]
}
